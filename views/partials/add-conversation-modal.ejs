<div class="modal-wrapper" id="add-conversation-modal">
    <div class="modal">
      <a onclick="closeModal()" class="modal-close">+</a>
      <div class="modal-title">
        <h2>Create New Conversation</h2>
      </div>
      <div class="modal-body">
        <form id="add-conversation-form">
          <input
            type="text"
            placeholder="search user by name or email or mobile"
            name="user"
            id="user"
            autocomplete="off"
          />
          <p class="error"></p>
          <div class="search_users"></div>
          <input type="submit" value="Submit" class="hide" />
        </form>
      </div>
    </div>
  </div>

  <script>

    function closeModal() {
      modal.style.display = "none";
      users_placeholder.style.display = "none";
      input.value = "";
    }

    let debounceTimer;
    const timeInterval = 500;
    const input = document.querySelector("input#user");
    const users_placeholder = document.querySelector('.search_users');

    input.addEventListener("keyup", ()=>{
      clearTimeout(debounceTimer);
      users_placeholder.style.display = 'none'

      if(input.value){
        debounceTimer = setTimeout(searchUser, timeInterval)
      }
    })

    input.addEventListener("keydown", ()=>{
      clearTimeout(debounceTimer)
    })

    async function searchUser () {
      const res = await fetch("/inbox/search", {
        method: "POST", 
        body: JSON.stringify({
          user: input.value
        }),
        headers: {
          'Content-type': "application/json; charset=UTF-8"
        }
      })

      const result = await res.json();
      
      if(result.errors){
        const errorPlaceholder = document.querySelector('p.error')
        errorPlaceholder.textContent = result.errors.common.msg;
        errorPlaceholder.style.display = "block";
      }else if (result.length > 0){
        let generatedHtml = '<ul>';
        result.forEach(user => {
          const avatar = user.avatar
            ? "./uploads/avatars/" + user.avatar
            : "./images/nophoto.png";

          generatedHtml += `<li onclick="createConversation('${user._id}', '${user.name}', '${user.avatar}')">
              <div class="user">
                <div class="avatar">
                  <img src="${avatar}" />
                </div>
                <div class="username">${user.name}</div>
              </div>
            </li>`;
        });
          generatedHtml += "</ul>";
          users_placeholder.innerHTML = generatedHtml;
          users_placeholder.style.display = "block";
      }
    }

    async function createConversation(id, name, avatar){
      try{const res = await fetch("/inbox/conversation", {
        method: "POST",
        body: JSON.stringify({
          participant: name,
          id: id,
          avatar: avatar != 'undefiend' ? avatar : null
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        },
      })
      const result = res.json();

      if(!result.errors){
        users_placeholder.style.display = 'none';
        input.value = name;
        setTimeout(()=>{
          location.reload();
        },1000)
      }else{
        throw new Error(result.errors.common.msg);
      }
      }catch(err){
        Toastify({
        text: "Error creating a conversation!",
        duration: 1000,
      });
      }
    }

  </script>